@model RuleEngine.Mvc.ViewModels.CreateRuleViewModel

@{
    ViewData["Title"] = "Create Rule";
}

<h1>Create New Rule</h1>

<div class="row">
    <div class="col-md-8">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="mb-3">
                <label asp-for="Name" class="form-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            
            <div class="mb-3">
                <label asp-for="Description" class="form-label"></label>
                <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            
            <div class="mb-3">
                <label asp-for="Tags" class="form-label"></label>
                <input asp-for="Tags" class="form-control" placeholder="e.g., discount, pricing, validation" />
                <span asp-validation-for="Tags" class="text-danger"></span>
            </div>
            
            <div class="mb-3">
                <label asp-for="PredicateExpression" class="form-label"></label>
                <textarea asp-for="PredicateExpression" class="form-control" rows="4" placeholder="Input.Amount > 100"></textarea>
                <span asp-validation-for="PredicateExpression" class="text-danger"></span>
                <div class="form-text">C# expression that determines when this rule applies. Use 'Input' to access the input data.</div>
            </div>
            
            <div class="mb-3">
                <label asp-for="ResultExpression" class="form-label"></label>
                <textarea asp-for="ResultExpression" class="form-control" rows="4" placeholder="Input.Amount * 0.9"></textarea>
                <span asp-validation-for="ResultExpression" class="text-danger"></span>
                <div class="form-text">C# expression that returns the result when the predicate is true. Use 'Input' to access the input data.</div>
            </div>
            
            <div class="mb-3">
                <button type="submit" class="btn btn-primary">Create Rule</button>
                <a asp-action="Index" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
    
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5>Example Rule</h5>
            </div>
            <div class="card-body">
                <h6>Discount Rule</h6>
                <p><strong>Predicate:</strong></p>
                <code>Input.Amount > 100</code>
                
                <p class="mt-3"><strong>Result:</strong></p>
                <code>Input.Amount * 0.9</code>
                
                <p class="mt-3"><small class="text-muted">This rule applies a 10% discount for orders over $100.</small></p>
            </div>
        </div>
        
        <div class="card mt-3">
            <div class="card-header">
                <h5>Available Properties</h5>
            </div>
            <div class="card-body">
                <p>In your expressions, you can access:</p>
                <ul>
                    <li><code>Input.PropertyName</code> - Access input properties</li>
                    <li>Standard C# operators and methods</li>
                    <li>Math operations</li>
                    <li>String operations</li>
                </ul>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
